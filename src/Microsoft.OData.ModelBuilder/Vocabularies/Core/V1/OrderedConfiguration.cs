// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License.  See License.txt in the project root for license information.
// This is an auto generated file. Please run the template to modify it.
// <auto-generated />

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.OData.Edm;
using Microsoft.OData.Edm.Vocabularies;

namespace Microsoft.OData.ModelBuilder.Core.V1
{
    /// <summary>
    /// Collection has a stable order. Ordered collections of primitive or complex types can be indexed by ordinal.
    /// </summary>
    public partial class OrderedConfiguration : VocabularyTermConfiguration
    {
        private bool? _ordered;

        /// <inheritdoc/>
        public override string TermName => "Org.OData.Core.V1.Ordered";

        /// <summary>
        /// Collection has a stable order. Ordered collections of primitive or complex types can be indexed by ordinal.
        /// </summary>
        /// <param name="ordered">The value to set</param>
        /// <returns><see cref="OrderedConfiguration"/></returns>
        public OrderedConfiguration IsOrdered(bool ordered)
        {
            _ordered = ordered;
            return this;
        }

        /// <inheritdoc/>
        public override IEdmExpression ToEdmExpression()
        {
            return _ordered.HasValue ? new EdmBooleanConstant(_ordered.Value) : null;
        }
    }
}
