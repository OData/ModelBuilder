// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License.  See License.txt in the project root for license information.
// This is an auto generated file. Please run the template to modify it.
// <auto-generated />

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.OData.Edm;
using Microsoft.OData.Edm.Vocabularies;

namespace Microsoft.OData.ModelBuilder.Core.V1
{
    /// <summary>
    /// The qualified names of explicitly bound operations that are supported on the target model element. These operations are in addition to any operations not annotated with RequiresExplicitBinding that are bound to the type of the target model element.
    /// </summary>
    public partial class ExplicitOperationBindingsConfiguration : VocabularyTermConfiguration
    {
        private readonly HashSet<string> _explicitOperationBindings = new HashSet<string>();

        /// <inheritdoc/>
        public override string TermName => "Org.OData.Core.V1.ExplicitOperationBindings";

        /// <summary>
        /// The qualified names of explicitly bound operations that are supported on the target model element. These operations are in addition to any operations not annotated with RequiresExplicitBinding that are bound to the type of the target model element.
        /// </summary>
        /// <param name="explicitOperationBindings">The value(s) to set</param>
        /// <returns><see cref="ExplicitOperationBindingsConfiguration"/></returns>
        public ExplicitOperationBindingsConfiguration HasExplicitOperationBindings(params string[] explicitOperationBindings)
        {
            _explicitOperationBindings.UnionWith(explicitOperationBindings);
            return this;
        }

        /// <inheritdoc/>
        public override IEdmExpression ToEdmExpression()
        {
            if (!_explicitOperationBindings.Any())
            {
                return null;
            }

            var records = _explicitOperationBindings.Select(item => item.ToEdmExpression());
            return new EdmCollectionExpression(records);
        }
    }
}
