// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License.  See License.txt in the project root for license information.
// This is an auto generated file. Please run the template to modify it.
// <auto-generated />

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.OData.Edm;
using Microsoft.OData.Edm.Vocabularies;

namespace Microsoft.OData.ModelBuilder.Core.V1
{
    /// <summary>
    /// Functions, actions and types in this namespace can be referenced in URLs with or without namespace- or alias- qualification.
    /// Data Modelers should ensure uniqueness of schema children across all default namespaces, and should avoid naming bound functions, actions, or derived types with the same name as a structural or navigational property of the type.
    /// </summary>
    public partial class DefaultNamespaceConfiguration : VocabularyTermConfiguration
    {
        private bool? _defaultNamespace;

        /// <inheritdoc/>
        public override string TermName => "Org.OData.Core.V1.DefaultNamespace";

        /// <summary>
        /// Functions, actions and types in this namespace can be referenced in URLs with or without namespace- or alias- qualification.
        /// Data Modelers should ensure uniqueness of schema children across all default namespaces, and should avoid naming bound functions, actions, or derived types with the same name as a structural or navigational property of the type.
        /// </summary>
        /// <param name="defaultNamespace">The value to set</param>
        /// <returns><see cref="DefaultNamespaceConfiguration"/></returns>
        public DefaultNamespaceConfiguration IsDefaultNamespace(bool defaultNamespace)
        {
            _defaultNamespace = defaultNamespace;
            return this;
        }

        /// <inheritdoc/>
        public override IEdmExpression ToEdmExpression()
        {
            return _defaultNamespace.HasValue ? new EdmBooleanConstant(_defaultNamespace.Value) : null;
        }
    }
}
