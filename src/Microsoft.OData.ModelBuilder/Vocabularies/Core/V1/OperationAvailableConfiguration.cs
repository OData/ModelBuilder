// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License.  See License.txt in the project root for license information.
// This is an auto generated file. Please run the template to modify it.
// <auto-generated />

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.OData.Edm;
using Microsoft.OData.Edm.Vocabularies;

namespace Microsoft.OData.ModelBuilder.Core.V1
{
    /// <summary>
    /// Action or function is available
    /// The annotation value will usually be an expression, e.g. using properties of the binding parameter type for instance-dependent availability, or using properties of a singleton for global availability. The static value `null` means that availability cannot be determined upfront and is instead expressed as an operation advertisement.
    /// </summary>
    public partial class OperationAvailableConfiguration : VocabularyTermConfiguration
    {
        private bool? _operationAvailable;

        /// <inheritdoc/>
        public override string TermName => "Org.OData.Core.V1.OperationAvailable";

        /// <summary>
        /// Action or function is available
        /// The annotation value will usually be an expression, e.g. using properties of the binding parameter type for instance-dependent availability, or using properties of a singleton for global availability. The static value `null` means that availability cannot be determined upfront and is instead expressed as an operation advertisement.
        /// </summary>
        /// <param name="operationAvailable">The value to set</param>
        /// <returns><see cref="OperationAvailableConfiguration"/></returns>
        public OperationAvailableConfiguration IsOperationAvailable(bool operationAvailable)
        {
            _operationAvailable = operationAvailable;
            return this;
        }

        /// <inheritdoc/>
        public override IEdmExpression ToEdmExpression()
        {
            return _operationAvailable.HasValue ? new EdmBooleanConstant(_operationAvailable.Value) : null;
        }
    }
}
