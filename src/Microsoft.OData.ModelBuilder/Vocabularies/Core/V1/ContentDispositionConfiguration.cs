// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License.  See License.txt in the project root for license information.
// This is an auto generated file. Please run the template to modify it.
// <auto-generated />

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.OData.Edm;
using Microsoft.OData.Edm.Vocabularies;

namespace Microsoft.OData.ModelBuilder.Core.V1
{
    /// <summary>
    /// The content disposition of the media stream of the annotated entity type marked with HasStream="true" or the annotated binary, stream, or string property or term
    /// </summary>
    public partial class ContentDispositionConfiguration : VocabularyTermConfiguration
    {
        private readonly Dictionary<string, object> _dynamicProperties = new Dictionary<string, object>();
        private string _type;
        private string _filename;

        /// <inheritdoc/>
        public override string TermName => "Org.OData.Core.V1.ContentDisposition";

        /// <summary>
        /// Dynamic properties.
        /// </summary>
        /// <param name="name">The name to set</param>
        /// <param name="value">The value to set</param>
        /// <returns><see cref="ContentDispositionConfiguration"/></returns>
        public ContentDispositionConfiguration HasDynamicProperty(string name, object value)
        {
            _dynamicProperties[name] = value;
            return this;
        }

        /// <summary>
        /// The disposition type of the binary or stream value, see [RFC 6266, Disposition Type](https://datatracker.ietf.org/doc/html/rfc6266#section-4.2)
        /// </summary>
        /// <param name="type">The value to set</param>
        /// <returns><see cref="ContentDispositionConfiguration"/></returns>
        public ContentDispositionConfiguration HasType(string type)
        {
            _type = type;
            return this;
        }

        /// <summary>
        /// The proposed filename for downloading the binary or stream value, see [RFC 6266, Disposition Parameter: 'Filename'](https://datatracker.ietf.org/doc/html/rfc6266#section-4.3)
        /// </summary>
        /// <param name="filename">The value to set</param>
        /// <returns><see cref="ContentDispositionConfiguration"/></returns>
        public ContentDispositionConfiguration HasFilename(string filename)
        {
            _filename = filename;
            return this;
        }

        /// <inheritdoc/>
        public override IEdmExpression ToEdmExpression()
        {
            var properties = new List<IEdmPropertyConstructor>();

            if (!string.IsNullOrEmpty(_type))
            {
                properties.Add(new EdmPropertyConstructor("Type", new EdmStringConstant(_type)));
            }

            if (!string.IsNullOrEmpty(_filename))
            {
                properties.Add(new EdmPropertyConstructor("Filename", new EdmStringConstant(_filename)));
            }

            properties.AddRange(_dynamicProperties.ToEdmProperties());

            if (!properties.Any())
            {
                return null;
            }

            return new EdmRecordExpression(properties);
        }
    }
}
