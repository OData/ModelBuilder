// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License.  See License.txt in the project root for license information.
// This is an auto generated file. Please run the template to modify it.
// <auto-generated />

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.OData.Edm;
using Microsoft.OData.Edm.Vocabularies;

namespace Microsoft.OData.ModelBuilder.Core.V1
{
    /// <summary>
    /// Instances of a type are annotated with this tag if they have no common structure in a given response payload
    /// The select-list of a context URL MUST be `(@Core.AnyStructure)` if it would otherwise be empty,
    ///       but this instance annotation SHOULD be omitted from the response value.
    /// </summary>
    public partial class AnyStructureConfiguration : VocabularyTermConfiguration
    {
        private bool? _anyStructure;

        /// <inheritdoc/>
        public override string TermName => "Org.OData.Core.V1.AnyStructure";

        /// <summary>
        /// Instances of a type are annotated with this tag if they have no common structure in a given response payload
        /// The select-list of a context URL MUST be `(@Core.AnyStructure)` if it would otherwise be empty,
        ///       but this instance annotation SHOULD be omitted from the response value.
        /// </summary>
        /// <param name="anyStructure">The value to set</param>
        /// <returns><see cref="AnyStructureConfiguration"/></returns>
        public AnyStructureConfiguration IsAnyStructure(bool anyStructure)
        {
            _anyStructure = anyStructure;
            return this;
        }

        /// <inheritdoc/>
        public override IEdmExpression ToEdmExpression()
        {
            return _anyStructure.HasValue ? new EdmBooleanConstant(_anyStructure.Value) : null;
        }
    }
}
