// Copyright (c) Microsoft Corporation.  All rights reserved.
// Licensed under the MIT License.  See License.txt in the project root for license information.
// This is an auto generated file. Please run the template to modify it.
// <auto-generated />

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.OData.Edm;
using Microsoft.OData.Edm.Vocabularies;

namespace Microsoft.OData.ModelBuilder.Capabilities.V1
{
    /// <summary>
    /// Org.OData.Capabilities.V1.HttpResponse
    /// </summary>
    public partial class HttpResponseConfiguration : IRecord
    {
        private readonly Dictionary<string, object> _dynamicProperties = new Dictionary<string, object>();
        private string _statusCode;
        private string _description;

        /// <summary>
        /// Creates a new instance of <see cref="HttpResponseConfiguration"/>
        /// </summary>
        public HttpResponseConfiguration()
        {
        }

        /// <summary>
        /// Dynamic properties.
        /// </summary>
        /// <param name="name">The name to set</param>
        /// <param name="value">The value to set</param>
        /// <returns><see cref="HttpResponseConfiguration"/></returns>
        public HttpResponseConfiguration HasDynamicProperty(string name, object value)
        {
            _dynamicProperties[name] = value;
            return this;
        }

        /// <summary>
        /// HTTP response status code, for example 400, 403, 501
        /// </summary>
        /// <param name="statusCode">The value to set</param>
        /// <returns><see cref="HttpResponseConfiguration"/></returns>
        public HttpResponseConfiguration HasStatusCode(string statusCode)
        {
            _statusCode = statusCode;
            return this;
        }

        /// <summary>
        /// Human-readable description of the response
        /// </summary>
        /// <param name="description">The value to set</param>
        /// <returns><see cref="HttpResponseConfiguration"/></returns>
        public HttpResponseConfiguration HasDescription(string description)
        {
            _description = description;
            return this;
        }

        /// <inheritdoc/>
        public IEdmExpression ToEdmExpression()
        {
            var properties = new List<IEdmPropertyConstructor>();

            if (!string.IsNullOrEmpty(_statusCode))
            {
                properties.Add(new EdmPropertyConstructor("StatusCode", new EdmStringConstant(_statusCode)));
            }

            if (!string.IsNullOrEmpty(_description))
            {
                properties.Add(new EdmPropertyConstructor("Description", new EdmStringConstant(_description)));
            }

            properties.AddRange(_dynamicProperties.ToEdmProperties());

            if (!properties.Any())
            {
                return null;
            }

            return new EdmRecordExpression(properties);
        }
    }
}
