name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
# Set batch to true, it means to let system waits to run until current run is completed,
# Then starts another run with all changes.
  batch: true
  branches:
    include:
    - main
    - release-1.x

# Pull request (PR) triggers
pr:
- main
- release-1.x

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  snExe: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\sn.exe'
  snExe64: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\sn.exe'
  productBinPath: '$(Build.SourcesDirectory)\src\Microsoft.OData.ModelBuilder\bin\$(buildConfiguration)'
  mainDll: 'Microsoft.OData.ModelBuilder.dll'
  testDll: 'Microsoft.OData.ModelBuilder.Tests.dll'
  skipComponentGovernanceDetection: true

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: MSSecurity-1ES-Build-Agents-Pool
      image: MSSecurity-1ES-Windows-2019
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      jobs:
      - job: Release
        steps:
        - task: PoliCheck@2
          displayName: 'Run PoliCheck ".\src"'
          inputs:
            inputType: CmdLine
            cmdLineArgs: '/F:$(Build.SourcesDirectory)/src /T:9 /Sev:"1|2" /PE:2 /O:poli_result_src.xml'

        - task: PoliCheck@2
          displayName: 'Run PoliCheck ".\test"'
          inputs:
            inputType: CmdLine
            cmdLineArgs: '/F:$(Build.SourcesDirectory)/test /T:9 /Sev:"1|2" /PE:2 /O:poli_result_test.xml'

        - task: NuGetToolInstaller@0
          displayName: 'Use NuGet >=5.2.0'
          inputs:
            versionSpec: '>=5.2.0'
            checkLatest: true

        - task: UseDotNet@2
          displayName: Use .NET 8.0
          inputs:
            packageType: 'sdk'
            version: '8.0.x'

        - task: DotNetCoreCLI@2
          displayName: 'Build Microsoft.OData.ModelBuilder.csproj '
          inputs:
            projects: '$(Build.SourcesDirectory)\src\Microsoft.OData.ModelBuilder\Microsoft.OData.ModelBuilder.csproj'
            arguments: '--configuration $(buildConfiguration) --no-incremental'

        - task: DotNetCoreCLI@2
          displayName: 'Build Microsoft.OData.ModelBuilder Unit test project'
          inputs:
            projects: '$(Build.SourcesDirectory)\test\Microsoft.OData.ModelBuilder.Tests\Microsoft.OData.ModelBuilder.Tests.csproj'
            arguments: '--configuration $(buildConfiguration) --no-incremental'

        - task: UseDotNet@2
          displayName: Use .NET 3.x
          inputs:
            packageType: 'sdk'
            version: '3.x'

        - task: DotNetCoreCLI@2
          displayName: 'Unit Tests (Microsoft.OData.ModelBuilder.Tests.csproj) '
          inputs:
            command: test
            projects: '$(Build.SourcesDirectory)\test\Microsoft.OData.ModelBuilder.Tests\Microsoft.OData.ModelBuilder.Tests.csproj'
            arguments: '--configuration $(buildConfiguration) --no-build'

        - task: Powershell@2
          displayName: 'Skip Strong Name Validation'
          inputs:
            targetType: 'inline'
            script: |
              & "$(snExe)" /Vr $(productBinPath)\$(mainDll)
              & "$(snExe64)" /Vr $(productBinPath)\$(mainDll)
              & "$(snExe)" /Vr $(testBinPath)\$(testDll)
              & "$(snExe64)" /Vr $(testBinPath)\$(testDll)
          enabled: false

        - task: BinSkim@3
          displayName: 'Run BinSkim - Product Binaries'
          inputs:
            InputType: Basic
            AnalyzeTarget: '$(productBinPath)\**\Microsoft.OData.ModelBuilder.dll'
            AnalyzeSymPath: '$(productBinPath)'
            AnalyzeVerbose: true
            AnalyzeHashes: true
            AnalyzeEnvironment: true

        - task: PublishSecurityAnalysisLogs@3
          displayName: 'Publish Security Analysis Logs'
          inputs:
            ArtifactName: SecurityLogs

        - task: PostAnalysis@2
          displayName: 'Post Analysis'
          inputs:
            BinSkim: true
            CredScan: true
            PoliCheck: true
