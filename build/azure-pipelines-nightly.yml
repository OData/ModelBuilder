name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

# No trigger for nightly
trigger: none

# No Pull request (PR) triggers for nightly
pr: none

# Nightly using schedule
schedules:
- cron: "0 0 * * Mon,Tue,Wed,Thu,Fri"
  displayName: midnightly build
  branches:
    include:
    - main

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  snExe: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\sn.exe'
  snExe64: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\sn.exe'
  productBinPath: '$(Build.SourcesDirectory)\src\Microsoft.OData.ModelBuilder\bin\$(buildConfiguration)'
  skipComponentGovernanceDetection: true

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: MSSecurity-1ES-Build-Agents-Pool
      image: MSSecurity-1ES-Windows-2019
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      jobs:
      - job: Release
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact - Nuget Packages'
            targetPath: '$(Build.ArtifactStagingDirectory)\Nuget'
            artifactName: Nuget
          - output: nuget
            displayName: 'NuGet push - Nightly packages to MyGet'
            packageParentPath: '$(Build.ArtifactStagingDirectory)'
            packagesToPush: '$(Build.ArtifactStagingDirectory)\Nuget\*Nightly*.nupkg'
            nuGetFeedType: external
            publishFeedCredentials: 'MyGet.org - ODL Feed'
        steps:
        - task: NuGetToolInstaller@0
          inputs:
            versionSpec: '>=5.2.0'

        - task: UseDotNet@2
          displayName: Use .NET 8.0
          inputs:
            packageType: 'sdk'
            version: '8.0.x'

        - task: Powershell@2
          displayName: 'Skip Strong Name Validation'
          inputs:
            targetType: 'inline'
            script: |
              & "$(snExe)" /Vr $(productBinPath)\$(mainDll)
              & "$(snExe64)" /Vr $(productBinPath)\$(mainDll)
              & "$(snExe)" /Vr $(testBinPath)\$(testDll)
              & "$(snExe64)" /Vr $(testBinPath)\$(testDll)
          enabled: false

        - task: DotNetCoreCLI@2
          displayName: 'Build Microsoft.OData.ModelBuilder.csproj '
          inputs:
            projects: '$(Build.SourcesDirectory)\src\Microsoft.OData.ModelBuilder\Microsoft.OData.ModelBuilder.csproj'
            arguments: '--configuration $(buildConfiguration) --no-incremental'

        - task: DotNetCoreCLI@2
          displayName: 'Build Microsoft.OData.ModelBuilder Unit test project'
          inputs:
            projects: '$(Build.SourcesDirectory)\test\Microsoft.OData.ModelBuilder.Tests\Microsoft.OData.ModelBuilder.Tests.csproj'
            arguments: '--configuration $(buildConfiguration) --no-incremental'

        - task: UseDotNet@2
          displayName: Use .NET 3.x
          inputs:
            packageType: 'sdk'
            version: '3.x'

        - task: DotNetCoreCLI@2
          displayName: 'Unit Tests (Microsoft.OData.ModelBuilder.Tests.csproj) '
          inputs:
            command: test
            projects: '$(Build.SourcesDirectory)\test\Microsoft.OData.ModelBuilder.Tests\Microsoft.OData.ModelBuilder.Tests.csproj'
            arguments: '--configuration $(buildConfiguration) --no-build'

        - task: BinSkim@3
          displayName: 'Run BinSkim - Product Binaries'
          inputs:
            InputType: Basic
            AnalyzeTarget: '$(productBinPath)\**\Microsoft.OData.ModelBuilder.dll'
            AnalyzeSymPath: '$(productBinPath)'
            AnalyzeVerbose: true
            AnalyzeHashes: true
            AnalyzeEnvironment: true

        - task: PublishSecurityAnalysisLogs@3
          displayName: 'Publish Security Analysis Logs'
          inputs:
            ArtifactName: SecurityLogs

        - task: PostAnalysis@2
          displayName: 'Post Analysis'
          inputs:
            BinSkim: true
            CredScan: true
            PoliCheck: true

        # CodeSign
        - task: EsrpCodeSigning@1
          displayName: 'ESRP CodeSign - OData'
          inputs:
            ConnectedServiceName: 'ESRP CodeSigning - OData'
            FolderPath: '$(productBinPath)'
            Pattern: 'Microsoft.OData.ModelBuilder.dll'
            signConfigType: inlineSignParams
            inlineOperation: |
             [
               {
                 "keyCode": "MSSharedLibSnKey",
                 "operationSetCode": "StrongNameSign",
                 "parameters": null,
                 "toolName": "sn.exe",
                 "toolVersion": "V4.6.1586.0"
               },
               {
                 "keyCode": "MSSharedLibSnKey",
                 "operationSetCode": "StrongNameVerify",
                 "parameters": null,
                 "toolName": "sn.exe",
                 "toolVersion": "V4.6.1586.0"
               },
               {
                 "keyCode": "CP-230012",
                 "operationSetCode": "SigntoolSign",
                 "parameters": [
                 {
                   "parameterName": "OpusName",
                   "parameterValue": "TestSign"
                 },
                 {
                   "parameterName": "OpusInfo",
                   "parameterValue": "http://test"
                 },
                 {
                   "parameterName": "PageHash",
                   "parameterValue": "/NPH"
                 },
                 {
                   "parameterName": "FileDigest",
                   "parameterValue": "/fd sha256"
                 },
                 {
                   "parameterName": "TimeStamp",
                   "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                 }
                 ],
                 "toolName": "signtool.exe",
                 "toolVersion": "6.2.9304.0"
               },
               {
                 "keyCode": "CP-230012",
                 "operationSetCode": "SigntoolVerify",
                 "parameters": [
                 {
                   "parameterName": "VerifyAll",
                   "parameterValue": "/all"
                 }
                 ],
                 "toolName": "signtool.exe",
                 "toolVersion": "6.2.9304.0"
               }
             ]
            SessionTimeout: 20
            VerboseLogin: true

        - task: MSBuild@1
          displayName: 'Get Nuget Package Metadata'
          inputs:
            solution: '$(Build.SourcesDirectory)\build\GetNugetPackageMetadata.proj'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'

        - task: NuGetCommand@2
          displayName: 'NuGet - pack Microsoft.OData.ModelBuilder.Nightly.nuspec'
          inputs:
            command: custom
            arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.ModelBuilder\Microsoft.OData.ModelBuilder.Nightly.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\Nuget -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPath);SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic);SystemComponentPackageDependency="$(SystemComponentPackageDependency)";ODataLibPackageDependency="$(ODataLibPackageDependency)" -Verbosity Detailed -Symbols -Symbols -SymbolPackageFormat snupkg'

        - task: NuGetCommand@2
          displayName: 'NuGet - pack Microsoft.OData.ModelBuilder.Release.nuspec'
          inputs:
            command: custom
            arguments: 'pack $(Build.SourcesDirectory)\src\Microsoft.OData.ModelBuilder\Microsoft.OData.ModelBuilder.Release.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\Nuget -Properties Configuration=$(buildConfiguration);ProductRoot=$(productBinPath);SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);VersionNuGetSemantic=$(VersionNuGetSemantic);SystemComponentPackageDependency="$(SystemComponentPackageDependency)";ODataLibPackageDependency="$(ODataLibPackageDependency)" -Verbosity Detailed -Symbols -Symbols -SymbolPackageFormat snupkg'

        - task: EsrpCodeSigning@1
          displayName: 'ESRP CodeSigning Nuget Packages'
          inputs:
            ConnectedServiceName: 'ESRP CodeSigning - OData'
            FolderPath: '$(Build.ArtifactStagingDirectory)\Nuget'
            Pattern: '*.nupkg'
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                  {
                      "keyCode": "CP-401405",
                      "operationSetCode": "NuGetSign",
                      "parameters": [ ],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  },
                  {
                      "keyCode": "CP-401405",
                      "operationSetCode": "NuGetVerify",
                      "parameters": [ ],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  }
              ]
            VerboseLogin: true